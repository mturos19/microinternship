---
title: "GDP Comparison Visualization Project"
format:
    html:
        code-fold: true
jupyter: python3
---

In this project, we will create visualizations to compare the GDP (Gross Domestic Product) of different countries over time. We will use Python and several libraries like pandas, matplotlib, and Plotly to achieve this.

We will achieve so using Quarto Documents, so that it adds interactivity and ease of access to exporting the document to different formats.

## Prerequisites

Before you begin, ensure you have the following installed:

- Python (version 3.x)
- Quarto installed on your system & Quarto extension installed in Visual Studio Code

You can install Quarto using the following command:

### Pip (Mac/Linux)
```bash
python3 -m pip install jupyter
```

### Pip (Windows)
```bash
py -m pip install jupyter
```

### Conda
```bash
conda install jupyter
```

```{python}
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from scipy.stats import linregress
import seaborn  as sns 
import statistics
import scipy
from scipy import stats
import matplotlib.pyplot as plt


df = pd.read_csv('gdp_csv.csv')


countries_list=['United Kingdom', 'Italy', 'France', 'Germany']


import plotly.express as px

df_map=df 
def map_gdp():
    fig = px.choropleth(df_map, locations="Country Name",
                        color="Value", 
                        locationmode='country names',
                        color_continuous_scale=px.colors.sequential.Plasma,
                        animation_frame="Year",
                        title="GDP Map",
                        range_color=(0, 3.5E12))
    fig.show()
map_gdp()


import plotly.graph_objects as go

def plot_gdp_interactive(countries):
    filtered_df = df[df['Country Name'].isin(countries)]
    fig = go.Figure()

    for country in filtered_df['Country Name'].unique():
        country_df = filtered_df[filtered_df['Country Name'] == country]
        fig.add_trace(go.Scatter(
            x=country_df['Year'],
            y=country_df['Value'],
            mode='lines',
            name=country
        ))

    fig.update_layout(
        xaxis=dict(title='Year'),
        yaxis=dict(title='GDP'),
        title='GDP Comparison',
        showlegend=True
    )
    fig.show()
plot_gdp_interactive(countries_list)

def barchart_interactive(countries):
    filtered_df = df[df['Country Name'].isin(countries)]
    for country in filtered_df['Country Name'].unique():
        fig = px.bar(
        data_frame = filtered_df,
        x='Country Name',
        y='Value',
        color='Year',  
        color_continuous_scale="Viridis",  
        labels={"x": "Countries", "y": "GDP"},
        title="GDP of the 4 Countries",
        )
        
    fig.show()
barchart_interactive(countries_list)


from sklearn import preprocessing, svm
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

def linear_reg_uk(df):
    uk = df[df['Country Name']=='United Kingdom']
    x = np.array(uk['Year']).reshape(-1, 1)
    y = np.array(uk['Value']).reshape(-1, 1)

    sns.lmplot(x ="Year", y ="Value", data = uk, order = 2, ci = None)
    x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.70)

    regr = LinearRegression()
    
    regr.fit(x_train, y_train)


    # Data scatter of predicted values
    y_pred = regr.predict(x_test)
    plt.scatter(x_test, y_test, color ='b')
    plt.plot(x_test, y_pred, color ='k')
    plt.title("Linear Regression of UK's GDP")

    plt.show()

linear_reg_uk(df)
```